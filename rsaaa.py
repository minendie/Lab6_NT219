from Crypto.Util.number import *
from Crypto.PublicKey import RSA
from pwn import *

def _decrypt(ciphertext):
    r.recvuntil("choice: ")
    r.sendline("2")
    r.recvuntil(" ")
    r.sendline(ciphertext)
    pt = r.recvuntil("\nRSA service", drop = True)[83:85]  
    return pt.decode()


flag_enc = 8551704885740889744309755032987020101863512425625180888138627403607161304953822738993391680520345265592645043068662520708169366929781691169918381273362170488677392263413969108832923278482236586827429727875628949058487270602658158101694222209489370933673886258280620225153476785410966385368931064204410945415519061635281102269037222446346830867891096168098901223718236752069061291203478333728516036006116492418308443798004928728297236853940010607000975084059609420468736462697536417422456028629313022287791490911384316494423590462342695228344052791447804257706981132882707663376242387425202256065291974952961394903512
N = 19432641663970228602454613256929114093476416053442925475633254245656442084676980241826420384564272629134502497370061822076575747111463173201148542655045316278398090385068205171950436581955137869549446126341817834795747752514975275682979945848335808044820464090400072255846712957548213211431401971264889339784897955377737194300284006994191233787440876463420303629452274099577492835935079361075653597959905476367002091347991422449318117611737507742564118800601798173432551133299810583835849178650967941773909728228411231512356877046766337695521576044469689255114306770909991892251764320328930944573509467143490908803761
print ("I see your super secret: ", flag_enc)
print ("N: ", N)

e = 65537
upper_limit = N
lower_limit = 0

flag = ""
i = 1

while i <= 1049:
    chosen_ct = long_to_bytes((bytes_to_long(long_to_bytes(flag_enc))*pow(2**i, e, N)) % N)
    output = _decrypt(chosen_ct.hex())
    print(i)
    if int(output[-1]) == 0:
        upper_limit = (upper_limit + lower_limit)//2
    elif int(output[-1]) == 1:
        lower_limit = (lower_limit + upper_limit)//2
    else:
        break
        print ("Unsuccessfull")
    i += 1

print ("Flag : ", long_to_bytes(lower_limit))